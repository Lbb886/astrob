---
import { SITE, BLOG } from '~/config.mjs';

import Layout from '~/layouts/PageLayout.astro';
import BlogList from '~/components/blog/List.astro';
import Headline from '~/components/blog/Headline.astro';
import Pagination from '~/components/blog/Pagination.astro';
import TagList from '~/components/blog/TagList.astro';

import { fetchPosts } from '~/utils/blog';
import { BLOG_BASE } from '~/utils/permalinks';


export async function getStaticPaths({ paginate }) {
  if (BLOG?.disabled || BLOG?.list?.disabled) return [];
  return paginate(await fetchPosts(), {
    params: { blog: BLOG_BASE || undefined },
    pageSize: BLOG.postsPerPage,
  });
}

const { page } = Astro.props;
const currentPage = page.currentPage ?? 1;

const meta = {
  title: `Blog${currentPage > 1 ? ` — Page ${currentPage}` : ''}`,
  description: SITE.description,
  noindex: BLOG?.list?.noindex || currentPage > 1,
  ogType: 'blog',
};

const tabs = ["列表", "索引"]

---

<Layout meta={meta}>
  <section class="page">
    <Headline subtitle="">文章</Headline>
    <div class="mb-6 flex flex-wrap gap-4" id="categories-container">
      {tabs.map((item, index) => (
        <a
          key={index}
          href="#"
          class={`tab ${index == 0 ? 'active' : ''}`}
        >
          <span>{item}</span>
        </a>
      ))}
    </div>
    <div class="tab-item">
      <BlogList posts={page.data} />
      <Pagination prevUrl={page.url.prev} nextUrl={page.url.next} />
    </div>
    <div class="tab-item">
      <TagList />
    </div>
  </section>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const tabs = document.querySelectorAll('.tab');
      const items = document.querySelectorAll('.tab-item');

      tabs.forEach(tab => {
        tab.addEventListener('click', function(e) {
          e.preventDefault();
          tabs.forEach(t => t.classList.remove('active'));
          tab.classList.add('active');
          const index = tab.getAttribute('key');
          items.forEach((item, key) => {
            if (key == Number(index)) {
              item.classList.remove('hidden');
            } else {
              item.classList.add('hidden');
            }
          });
        });
      });
    });
  </script>
</Layout>
